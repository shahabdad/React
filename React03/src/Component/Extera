// import axios from "axios";
// import { useEffect, useState } from "react";
// import "bootstrap/dist/css/bootstrap.min.css";

// function App() {
//   const [todos, setTodos] = useState([]);

//   useEffect(() => {
//     fetchTodos();
//   }, []);

//   const fetchTodos = async () => {
//     let data = await axios.get("https://dummyjson.com/todos?limit=10&skip=0");
//     setTodos(data.data.todos);
//   };

//   const deleteTodo = async (id) => {
//     await axios.delete(`https://dummyjson.com/todos/${id}`);
//     fetchTodos();
//   };

// ,  const [isModalOpen, setIsModalOpen] = useState(false);
//   const [currentTodo, setCurrentTodo] = useState(null);
//   const [todo, setTitle] = useState("");

//   const openModal = (todo = null) => {
//     setIsModalOpen(true);
//     setCurrentTodo(todo);
//     setTitle(todo ? todo.todo : "");
//   };

//       const closeModal = () => {
//     setIsModalOpen(false);
//     setCurrentTodo(null);
//     setTitle("");
//   };

//   const handleSubmit = async (e) => {
//     e.preventDefault();

//     if (todo === "") {
//       alert("Please enter title");
//       return false;
//     }
//     try {
//       let data = await axios.post("https://dummyjson.com/todos/add", {
//         headers: { "Content-Type": "application/json" },
//         userId: 5,
//         body: {
//           todo,
//           completed: false,
//         },
//       });

//       setTitle("");
//       console.log(data.statusText);
//       closeModal();
//     } catch (e) {
//       console.log(e.error);
//     }
//   };

//   function status(status) {
//     if (status) {
//       return <span className="badge bg-success">Completed</span>;
//     } else {
//       return <span className="badge bg-warning text-dark">Pending</span>;
//     }
//   }

//   return (
//     <div className="container py-4">
//       <button className="btn btn-primary mb-3" onClick={() => openModal()}>
//         Create
//       </button>
//       <h2 className="mb-4">Todos</h2>
//       <div className="table-responsive">
//         <table className="table table-bordered">
//           <thead className="table-light">
//             <tr>
//               <th>Title</th>
//               <th className="text-center">Status</th>
//               <th className="text-center">Actions</th>
//             </tr>
//           </thead>
//           <tbody>
//             {todos.map((todo) => (
//               <tr key={todo.id}>
//                 <td>{todo.todo}</td>
//                 <td className="text-center">{status(todo.completed)}</td>
//                 <td className="text-center">
//                   <button
//                     className="btn btn-link text-primary"
//                     onClick={() => openModal(todo)}
//                   >
//                     Edit
//                   </button>
//                   <button
//                     className="btn btn-link text-danger"
//                     onClick={() => deleteTodo(todo.id)}
//                   >
//                     Delete
//                   </button>
//                 </td>
//               </tr>
//             ))}
//           </tbody>
//         </table>
//       </div>

//       {/* Modal */}
//       {isModalOpen && (
//         <div className="modal d-block" tabIndex="-1">
//           <div className="modal-dialog">
//             <div className="modal-content">
//               <div className="modal-header">
//                 <h5 className="modal-title">
//                   {currentTodo ? "Edit Todo" : "Add Todo"}
//                 </h5>
//                 <button
//                   type="button"
//                   className="btn-close"
//                   onClick={closeModal}
//                 ></button>
//               </div>
//               <div className="modal-body">
//                 <form onSubmit={handleSubmit}>
//                   <div className="mb-3">
//                     <label htmlFor="title" className="form-label">
//                       Title
//                     </label>
//                     <input
//                       type="text"
//                       id="title"
//                       placeholder="Enter title"
//                       value={todo}
//                       onChange={(e) => setTitle(e.target.value)}
//                       className="form-control"
//                     />
//                   </div>
//                   <div className="d-flex justify-content-end">
//                     <button
//                       type="button"
//                       className="btn btn-secondary me-2"
//                       onClick={closeModal}
//                     >
//                       Cancel
//                     </button>
//                     <button type="submit" className="btn btn-primary">
//                       Save
//                     </button>
//                   </div>
//                 </form>
//               </div>
//             </div>
//           </div>
//         </div>
//       )}
//     </div>
//   );
// }

// export default App;
